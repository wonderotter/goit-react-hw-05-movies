{"version":3,"file":"static/js/736.da538bf6.chunk.js","mappings":"8MAEaA,EAAW,CACpBC,QAAS,mCACTC,SAAS,gCAETC,YAAY,WAAD,wBAAE,oGACsBC,EAAAA,EAAAA,IAAA,UACnBJ,EAASE,SADU,qCAC2BF,EAASC,UAC9DI,OAAM,SAAAC,GACH,MAAM,IAAIC,MAAMD,EAAME,QACzB,IALI,cACHC,EADG,gBAOIA,EAAiBC,KAAKC,QAP1B,mFAAF,kDAAC,GAUZC,eAAe,WAAD,wBAAE,WAAMC,GAAN,uFACcT,EAAAA,EAAAA,IAAA,UAEfJ,EAASE,SAFM,gCAE0BF,EAASC,QAFnC,kBAEoDY,IAEzER,OAAM,SAAAC,GACH,MAAM,IAAIC,MAAMD,EAAME,QACzB,IAPO,cACNM,EADM,yBAQLA,EAAYJ,KAAKC,SARZ,2CAAF,mDAAC,GAWfI,gBAAgB,WAAD,wBAAE,WAAMC,GAAN,uFACcZ,EAAAA,EAAAA,IAAA,UACfJ,EAASE,SADM,iBACWc,EADX,oBAC8BhB,EAASC,UAC7DI,OAAM,SAAAC,GACH,MAAM,IAAIC,MAAMD,EAAME,QACzB,IALQ,cACPS,EADO,yBAMNA,EAAaP,MANP,2CAAF,mDAAC,GAQhBQ,gBAAgB,WAAD,wBAAE,WAAMF,GAAN,uFACcZ,EAAAA,EAAAA,IAAA,UAEhBJ,EAASE,SAFO,iBAEUc,EAFV,4BAEqChB,EAASC,UAEpEI,OAAM,SAAAC,GACH,MAAM,IAAIC,MAAMD,EAAME,QACzB,IAPQ,cACPW,EADO,yBAQNA,EAAaT,MARP,2CAAF,mDAAC,GAWhBU,gBAAgB,WAAD,wBAAE,WAAMJ,GAAN,uFACcZ,EAAAA,EAAAA,IAAA,UAEhBJ,EAASE,SAFO,iBAEUc,EAFV,4BAEqChB,EAASC,UAEpEI,OAAM,SAAAC,GACH,MAAM,IAAIC,MAAMD,EAAME,QACzB,IAPQ,cACPW,EADO,yBAQNA,EAAaT,KAAKC,SARZ,2CAAF,mDAAC,G,2FC5CPU,E,OAAWC,EAAAA,GAAH,gI,kBCmBrB,EAlBa,WACX,OAAmBC,EAAAA,EAAAA,GAAS,QAArBC,GAAP,eAEA,OACE,SAACH,EAAD,UACuB,IAApBG,EAASC,QACRD,EAASE,KAAKC,KAAI,SAAAD,GAAI,OACpB,2BACE,wBAAKA,EAAKE,QACV,uCACcF,EAAKG,cADnB,IACmCH,EAAKI,eAHjCJ,EAAKK,GADM,KAU7B,C,yHCfYR,EAAW,SAAAS,GACtB,OAA0BC,EAAAA,EAAAA,UAAkB,YAATD,EAAqB,CAAC,EAAI,IAA7D,eAAOE,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QA8BR,OA5BAE,EAAAA,EAAAA,YAAU,WACR,IACE,GAAa,SAATN,EAIF,YAHA,iBAAC,0FACCG,EADD,SACgBnC,EAAAA,EAAAA,gBAAyBoC,GADzC,4EAAD,GAMF,GAAa,YAATJ,EAIF,YAHA,iBAAC,0FACCG,EADD,SACgBnC,EAAAA,EAAAA,gBAAyBoC,GADzC,4EAAD,GAMF,GAAa,YAATJ,EAIF,YAHA,iBAAC,0FACCG,EADD,SACgBnC,EAAAA,EAAAA,gBAAyBoC,GADzC,4EAAD,EAQH,CAHC,MAAO9B,GAEP,MADAiC,QAAQC,IAAIlC,GACN,IAAIC,MAAMD,EAAME,QACvB,CACF,GAAE,CAAC4B,EAASJ,IAEN,CAACE,EACT,C","sources":["API/API.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","hooks/useMovie.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const MovieAPI = {\n    API_KEY: 'de43d67db1c628887eb86e6b3184ef59',\n    BASE_URL: `https://api.themoviedb.org/3/`,\n\n    getTrending: async () => {\n        const trendingForToday = await axios\n            .get(`${MovieAPI.BASE_URL}/trending/all/day?api_key=${MovieAPI.API_KEY}`)\n            .catch(error => {\n                throw new Error(error.message);\n            });\n\n        return await trendingForToday.data.results;\n    },\n\n    getMovieByName: async movieName => {\n        const movieByName = await axios\n            .get(\n                `${MovieAPI.BASE_URL}search/movie?api_key=${MovieAPI.API_KEY}&query=${movieName}`\n            )\n            .catch(error => {\n                throw new Error(error.message);\n            });\n        return movieByName.data.results;\n    },\n\n    getMovieDetails: async movieID => {\n        const movieDetails = await axios\n            .get(`${MovieAPI.BASE_URL}movie/${movieID}?api_key=${MovieAPI.API_KEY}`)\n            .catch(error => {\n                throw new Error(error.message);\n            });\n        return movieDetails.data;\n    },\n    getMovieCredits: async movieID => {\n        const movieCredits = await axios\n            .get(\n                `${MovieAPI.BASE_URL}movie/${movieID}/credits?api_key=${MovieAPI.API_KEY}`\n            )\n            .catch(error => {\n                throw new Error(error.message);\n            });\n        return movieCredits.data;\n    },\n\n    getMovieReviews: async movieID => {\n        const movieCredits = await axios\n            .get(\n                `${MovieAPI.BASE_URL}movie/${movieID}/reviews?api_key=${MovieAPI.API_KEY}`\n            )\n            .catch(error => {\n                throw new Error(error.message);\n            });\n        return movieCredits.data.results;\n    },\n};\n","import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    border-bottom: 1px solid #000000;\n  }\n`;","import { CastList } from './Cast.styled';\nimport { useMovie } from 'hooks/useMovie';\n\nconst Cast = () => {\n  const [castList] = useMovie('Cast');\n\n  return (\n    <CastList>\n      {castList.length !== 0 &&\n        castList.cast.map(cast => (\n          <li key={cast.id}>\n            <h4>{cast.name}</h4>\n            <p>\n              Character: {cast.original_name}/{cast.character}\n            </p>\n          </li>\n        ))}\n    </CastList>\n  );\n};\n\nexport default Cast;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MovieAPI } from 'API/API';\n\nexport const useMovie = type => {\n  const [state, setState] = useState(type === 'Details' ? {} : []);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    try {\n      if (type === 'Cast') {\n        (async () => {\n          setState(await MovieAPI.getMovieCredits(movieId));\n        })();\n        return;\n      }\n\n      if (type === 'Reviews') {\n        (async () => {\n          setState(await MovieAPI.getMovieReviews(movieId));\n        })();\n        return;\n      }\n\n      if (type === 'Details') {\n        (async () => {\n          setState(await MovieAPI.getMovieDetails(movieId));\n        })();\n        return;\n      }\n    } catch (error) {\n      console.log(error);\n      throw new Error(error.message);\n    }\n  }, [movieId, type]);\n\n  return [state];\n};"],"names":["MovieAPI","API_KEY","BASE_URL","getTrending","axios","catch","error","Error","message","trendingForToday","data","results","getMovieByName","movieName","movieByName","getMovieDetails","movieID","movieDetails","getMovieCredits","movieCredits","getMovieReviews","CastList","styled","useMovie","castList","length","cast","map","name","original_name","character","id","type","useState","state","setState","movieId","useParams","useEffect","console","log"],"sourceRoot":""}